/* 
Fred O'Hara
Project 3
5/7/2016

Request 1
*/
 CREATE OR REPLACE VIEW DEPTINFO
 AS SELECT d.DEPARTMENT_ID, d.DEPARTMENT_NAME, d.MANAGER_ID, d.LOCATION_ID, DECODE(e.FIRST_NAME, NULL, 'NO MANAGER', e.FIRST_NAME || ' ' || e.LAST_NAME) AS MGR_NAME
    FROM DEPARTMENTS d LEFT JOIN EMPLOYEES e
    ON d.MANAGER_ID = e.EMPLOYEE_ID
    ORDER BY DEPARTMENT_ID;

/* 
Fred O'Hara
Project 3
5/7/2016

Request 2
*/
SELECT EMPLOYEE_ID, LAST_NAME, DEPARTMENT_ID, SALARY
FROM (SELECT *
      FROM EMPLOYEES
      ORDER BY SALARY DESC)
WHERE ROWNUM < 5;

/* 
Fred O'Hara
Project 3
5/7/2016

Request 3
*/
CREATE TABLE DEPT_COPY AS SELECT * FROM DEPARTMENTS;

CREATE SEQUENCE DEPT_IDS
    START WITH      300
    INCREMENT BY    10;
  
INSERT INTO DEPT_COPY (DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
VALUES(DEPT_IDS.nextVal, 'Manufacturing', 124, 1500);

INSERT INTO DEPT_COPY (DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
VALUES(DEPT_IDS.nextVal, 'Bribes Administration', 205, 1700);

/* 
Fred O'Hara
Project 3
5/7/2016

Request 4
*/
SELECT DECODE(COUNT(*), COUNT(*), 'NOT 1700') AS LOCATION, COUNT(*) AS NUM_EMPLOYEES, AVG(SALARY) AS AVG_SALARY
FROM EMPLOYEES JOIN DEPARTMENTS
USING(DEPARTMENT_ID)
WHERE LOCATION_ID <> 1700
UNION
SELECT DECODE(COUNT(*), COUNT(*), '1700') AS LOCATION, COUNT(*) AS NUM_EMPLOYEES, AVG(SALARY) AS AVG_SALARY
FROM EMPLOYEES JOIN DEPARTMENTS
USING(DEPARTMENT_ID)
WHERE LOCATION_ID = 1700;

/* 
Fred O'Hara
Project 3
5/7/2016

Request 5
*/
SELECT TITLE, CATEGORY, DECODE(GROUPING(TITLE), 1, 'Sum of CATEGORY') AS "Category Sum", DECODE(GROUPING (CATEGORY), 1, 'Sum of ALL BOOKS') AS "Inventory Sum", TO_CHAR( SUM(PAIDEACH * QUANTITY), '$9,999.99' ) AS SALES, COUNT(ISBN) AS Qty
FROM BOOKS INNER JOIN ORDERITEMS
USING(ISBN)
GROUP BY ROLLUP ( CATEGORY,  TITLE);


/* 
Fred O'Hara
Project 3
5/7/2016

Request 6
*/
DECLARE
    v_DEPTID        DEPARTMENTS.DEPARTMENT_ID%TYPE;
    v_DEPTNAME      DEPARTMENTS.DEPARTMENT_NAME%TYPE;
    v_CITY          LOCATIONS.CITY%TYPE;

 BEGIN

 SELECT   DEPARTMENT_ID,      DEPARTMENT_NAME,      CITY
      INTO    v_DEPTID,  v_DEPTNAME,  v_CITY
      FROM    DEPARTMENTS INNER JOIN LOCATIONS USING(LOCATION_ID)
      WHERE   DEPARTMENT_ID = 110;

 DBMS_OUTPUT.PUT_LINE 
   	( 'DEPT ID: '  ||  v_DEPTID  ||  ', DEPARTMENT NAME: '  ||   v_DEPTNAME || ', CITY: ' || v_CITY );

 END  ;